{"ast":null,"code":"import _defineProperty from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction SuburbStores() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stores = _useState2[0],\n      setStores = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suburbSearch = _useState4[0],\n      setSuburbSearch = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formObject = _useState6[0],\n      setFormObject = _useState6[1]; // Deletes a book from the database with a given id, then reloads books from the db\n\n\n  function searchStores() {\n    console.log(suburbSearch);\n    API.searchStores(suburbSearch).then(function (res) {\n      return setStores(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  }\n\n  ;\n\n  function handleSearchChange(event) {\n    var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n    setSuburbSearch(value); //setFormObject({...formObject, [name]: value})\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Search Stores In Your Suburb\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-9 sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"suburbSearch\",\n    value: suburbSearch,\n    onChange: handleSearchChange,\n    placeholder: \"Add your Suburb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: searchStores,\n    type: \"success\",\n    className: \"input-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Search\")))))), stores.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, stores.map(function (store) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: store._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/stores/\" + store._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, stores.suburb, \" by \", store.nameOfStore)));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default SuburbStores;","map":{"version":3,"sources":["/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js"],"names":["React","useEffect","useState","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","SuburbStores","stores","setStores","suburbSearch","setSuburbSearch","formObject","setFormObject","searchStores","console","log","then","res","catch","err","handleInputChange","event","target","name","value","handleSearchChange","handleFormSubmit","preventDefault","title","author","saveStore","suburb","nameOfStore","phoneNumber","length","map","store","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\n\nfunction SuburbStores() {\n  // Setting our component's initial state\n  const [stores, setStores] = useState([])\n  const [suburbSearch, setSuburbSearch] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function searchStores() {\n      console.log(suburbSearch)\n    API.searchStores(suburbSearch)\n      .then(res => setStores(res))\n      .catch(err => console.log(err));\n  }\n\n    \n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n\n  function handleSearchChange(event) {\n    const { name, value } = event.target;\n    setSuburbSearch(value);\n    //setFormObject({...formObject, [name]: value})\n  };\n\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      })\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n  };\n\n\n    return (\n      <Container fluid>\n        <Row>\n          \n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>Search Stores In Your Suburb</h1>\n            </Jumbotron>\n\n            <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input\n                      name=\"suburbSearch\"\n                      value={suburbSearch}\n                      onChange={handleSearchChange}\n                      placeholder=\"Add your Suburb\"\n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <FormBtn\n                      onClick={searchStores}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </FormBtn>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n            \n            {stores.length ? (\n              <List>\n                {stores.map(store => {\n                  return (\n                    <ListItem key={store._id}>\n                      <a href={\"/stores/\" + store._id}>\n                        <strong>\n                          {stores.suburb} by {store.nameOfStore}\n                        </strong>\n                      </a>\n\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default SuburbStores;\n"]},"metadata":{},"sourceType":"module"}