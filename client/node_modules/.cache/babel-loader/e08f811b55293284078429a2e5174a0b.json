{"ast":null,"code":"import _defineProperty from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stores = _useState2[0],\n      setStores = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Load all books and store them with setBooks\n  //   useEffect(() => {\n  //     loadBooks()\n  //   }, [])\n  // Loads all books and sets them to books\n  //   function loadBooks() {\n  //     API.getBooks()\n  //       .then(res => \n  //         setBooks(res.data)\n  //       )\n  //       .catch(err => console.log(err));\n  //   };\n  // Deletes a book from the database with a given id, then reloads books from the db\n  //   function deleteBook(id) {\n  //     API.deleteBook(id)\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Search Stores In your Suburb\")), stores.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, stores.map(function (stores) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: stores._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/stores/\" + stores._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, stores.suburb, \" by \", stores.nameOfStore)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteStores(stores._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default SuburbStores;","map":{"version":3,"sources":["/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js"],"names":["React","useEffect","useState","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","stores","setStores","formObject","setFormObject","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","author","saveStore","suburb","nameOfStore","phoneNumber","then","res","console","log","catch","err","length","map","_id","deleteStores","SuburbStores"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [stores, setStores] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n//   useEffect(() => {\n//     loadBooks()\n//   }, [])\n\n  // Loads all books and sets them to books\n//   function loadBooks() {\n//     API.getBooks()\n//       .then(res => \n//         setBooks(res.data)\n//       )\n//       .catch(err => console.log(err));\n//   };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n//   function deleteBook(id) {\n//     API.deleteBook(id)\n//       .then(res => loadBooks())\n//       .catch(err => console.log(err));\n//   }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      })\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n          \n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Search Stores In your Suburb</h1>\n            </Jumbotron>\n            \n            {stores.length ? (\n              <List>\n                {stores.map(stores => {\n                  return (\n                    <ListItem key={stores._id}>\n                      <a href={\"/stores/\" + stores._id}>\n                        <strong>\n                          {stores.suburb} by {stores.nameOfStore}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => deleteStores(stores._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default SuburbStores;\n"]},"metadata":{},"sourceType":"module"}