{"ast":null,"code":"import _defineProperty from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction SuburbStores() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stores = _useState2[0],\n      setStores = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suburbSearch = _useState4[0],\n      setSuburbSearch = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formObject = _useState6[0],\n      setFormObject = _useState6[1];\n\n  useEffect(function () {\n    console.log(\"useEffect hit\");\n    console.log(stores);\n  }, [stores]); // Deletes a book from the database with a given id, then reloads books from the db\n\n  var searchStores = function searchStores(e) {\n    e.preventDefault();\n    console.log(suburbSearch);\n    API.searchStores(suburbSearch).then(function (res) {\n      return setStores(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }; // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  }\n\n  ;\n\n  var handleSearchChange = function handleSearchChange(event) {\n    console.log(\"search input cjange\");\n    var _event$target2 = event.target,\n        name = _event$target2.name,\n        value = _event$target2.value;\n    setSuburbSearch(value); //setFormObject({...formObject, [name]: value})\n  }; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Search Stores In Your Suburb\"), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-9 sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"suburbSearch\",\n    value: suburbSearch,\n    onChange: handleSearchChange,\n    placeholder: \"Add your Suburb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: searchStores,\n    type: \"success\",\n    className: \"input-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Search\"))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, !stores.length ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"No Stores to Display\") : /*#__PURE__*/React.createElement(StoresList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, stores.map(function (store) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: store.suburb,\n      title: store.nameOfStore // href={store.href}\n      ,\n      phonenumber: store.phoneNumber // thumbnail={store.thumbnail}\n      ,\n      pickup: store.pickup,\n      delivery: store.delivery,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    });\n  })))))));\n}\n\nexport default SuburbStores;","map":{"version":3,"sources":["/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/SuburbStores.js"],"names":["React","useEffect","useState","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","SuburbStores","stores","setStores","suburbSearch","setSuburbSearch","formObject","setFormObject","console","log","searchStores","e","preventDefault","then","res","data","catch","err","handleInputChange","event","target","name","value","handleSearchChange","handleFormSubmit","title","author","saveStore","suburb","nameOfStore","phoneNumber","length","map","store","pickup","delivery"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\n\nfunction SuburbStores() {\n  // Setting our component's initial state\n  const [stores, setStores] = useState([])\n  const [suburbSearch, setSuburbSearch] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  \n  useEffect(() => {\n      console.log(\"useEffect hit\");\n      console.log(stores);\n  },[stores])\n  // Deletes a book from the database with a given id, then reloads books from the db\n  const searchStores = (e) => {\n    e.preventDefault();\n      console.log(suburbSearch)\n    API.searchStores(suburbSearch)\n      .then(res => setStores(res.data))\n      .catch(err => console.log(err));\n  }\n\n    \n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n\n  const handleSearchChange = (event) => {\n    console.log(\"search input cjange\");\n    const { name, value } = event.target;\n    setSuburbSearch(value);\n    //setFormObject({...formObject, [name]: value})\n  };\n\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber\n      })\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n  };\n\n\n    return (\n      <Container fluid>\n        <Row>\n      \n          <Col size=\"md-12 sm-12\">\n            <Jumbotron>\n              <h1>Search Stores In Your Suburb</h1>\n            \n\n            <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input\n                      name=\"suburbSearch\"\n                      value={suburbSearch}\n                      onChange={handleSearchChange}\n                      placeholder=\"Add your Suburb\"\n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <FormBtn\n                      onClick={searchStores}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </FormBtn>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n          </Jumbotron>\n\n          <Row>\n          <Col size=\"xs-12\">\n            {!stores.length ? (\n              <h1 className=\"text-center\">No Stores to Display</h1>\n            ) : (\n              <StoresList>\n                {stores.map(store => {\n                  return (\n                    <ListItem\n                      key={store.suburb}\n                      title={store.nameOfStore}\n                      // href={store.href}\n                      phonenumber={store.phoneNumber}\n                      // thumbnail={store.thumbnail}\n                      pickup={store.pickup}\n                      delivery={store.delivery}\n                    />\n                  );\n                })}\n              </StoresList>\n            )}\n          </Col>\n        </Row>\n            \n            {/* {stores.length ? (\n              <List>\n                {stores.map(store => {\n                  return (\n                    <ListItem key={store._id}>\n                      <a href={\"/stores/\" + store._id}>\n                        <strong>\n                          {store.suburb} \n                          {store.nameOfStore}\n\n                        </strong>\n                      </a>\n\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )} */}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default SuburbStores;\n"]},"metadata":{},"sourceType":"module"}