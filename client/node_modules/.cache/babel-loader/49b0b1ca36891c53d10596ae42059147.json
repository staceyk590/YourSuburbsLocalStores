{"ast":null,"code":"import _defineProperty from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/StaceyKoumaras/stacey/SuburbStores/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/AddStore.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn, label } from \"../components/Form\";\n\nfunction AddStore() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stores = _useState2[0],\n      setStores = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.suburb && formObject.nameOfStore) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber,\n        pickup: formObject.pickup,\n        delivery: formObject.delivery\n      }).then(function (res) {\n        console.log(res);\n        setFormObject({});\n        window.location.replace(\"/\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Add my store to the database\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-overflow-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"suburb\",\n    placeholder: \"Suburb (Required)\",\n    value: formObject.suburb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"nameOfStore\",\n    placeholder: \"Name Of Store (required)\",\n    value: formObject.nameOfStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"phoneNumber\",\n    placeholder: \"Phone Number (required)\",\n    value: formObject.phonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    id: \"filled-in-box\",\n    checked: formObject.pickup,\n    onChange: function onChange() {\n      return setFormObject(_objectSpread({}, formObject, {\n        pickup: !formObject.pickup\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filled-in-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"  Pickup Available\")), /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    id: \"filled-in-box\",\n    checked: formObject.delivery,\n    onChange: function onChange() {\n      return setFormObject(_objectSpread({}, formObject, {\n        delivery: !formObject.delivery\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filled-in-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"  Delivery Available\"))), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"details\",\n    placeholder: \"Details\",\n    value: formObject.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.suburb && formObject.nameOfStore),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}\n\nexport default AddStore;","map":{"version":3,"sources":["/Users/StaceyKoumaras/stacey/SuburbStores/client/src/pages/AddStore.js"],"names":["React","useEffect","useState","Jumbotron","API","Col","Row","Container","Input","TextArea","FormBtn","label","AddStore","stores","setStores","formObject","setFormObject","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","suburb","nameOfStore","saveStore","phoneNumber","pickup","delivery","then","res","console","log","window","location","replace","catch","err","phonenumber","details"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn, label} from \"../components/Form\";\n\nfunction AddStore() {\n  // Setting our component's initial state\n  const [stores, setStores] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.suburb && formObject.nameOfStore) {\n      API.saveStore({\n        suburb: formObject.suburb,\n        nameOfStore: formObject.nameOfStore,\n        phoneNumber: formObject.phoneNumber,\n        pickup: formObject.pickup,\n        delivery: formObject.delivery\n      })\n        .then(res => {\n          console.log(res)\n          setFormObject({})\n          window.location.replace(\"/\")\n\n\n        \n          \n        })\n        .catch(err => console.log(err))\n    }\n  };\n\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>Add my store to the database</h1>\n            </Jumbotron>\n            <form>\n            <div className=\"list-overflow-container\">\n\n              <Input\n                onChange={handleInputChange}\n                name=\"suburb\"\n                placeholder=\"Suburb (Required)\"\n                value={formObject.suburb}\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"nameOfStore\"\n                placeholder=\"Name Of Store (required)\"\n                value={formObject.nameOfStore}\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"phoneNumber\"\n                placeholder=\"Phone Number (required)\"\n                value={formObject.phonenumber}\n              />\n\n              <Row>\n                <Col size=\"xs-3 sm-2\">\n                  <input type=\"checkbox\" className=\"filled-in\" id=\"filled-in-box\"\n                  checked={formObject.pickup}\n                  onChange={()=>setFormObject({...formObject, pickup: !formObject.pickup})}/>\n                  <label htmlFor=\"filled-in-box\">  Pickup Available</label>\n                </Col>\n               \n                <Col size=\"xs-3 sm-2\">\n                  <input type=\"checkbox\" className=\"filled-in\" id=\"filled-in-box\"\n                  checked={formObject.delivery}\n                  onChange={()=>setFormObject({...formObject, delivery: !formObject.delivery})}/>\n                  <label htmlFor=\"filled-in-box\">  Delivery Available</label>\n                </Col>\n               </Row>\n\n\n              <TextArea\n                onChange={handleInputChange}\n                name=\"details\"\n                placeholder=\"Details\"\n                value={formObject.details}\n              />\n              <FormBtn\n                disabled={!(formObject.suburb && formObject.nameOfStore)}\n                onClick={handleFormSubmit}\n              >\n                Submit\n              </FormBtn>\n              </div>\n            </form>\n          </Col>\n          \n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default AddStore;\n"]},"metadata":{},"sourceType":"module"}